{"version":3,"sources":["../../source/plugin/write assets.js"],"names":["write_assets","extract_path","default_filter","module","regular_expression","test","name","default_asset_path","default_parser","source","json","options","log","debug","require","version","webpack_stats","development","webpack_stats_path","fs","outputFileSync","semver","major","minor","patch","webpackVersion","webpackUsesTildeForNodeModules","output","webpack","populate_assets","output_to_a_file","assets_info","rewrite","webpack_assets_path","assetsByChunkName","forEach","javascript","get_assets","style","styles","extension","chunk","Array","isArray","filter","path","extname","map","assets_base_url","parsed_assets","global_paths_to_parsed_asset_paths","define_webpack_public_path","asset_type","asset_type_settings","assets","extract_asset_path","parser","began_at","Date","getTime","modules","regular_expressions","error","reduce","set","asset_path","parsed_asset","trace","id","require_hacker","to_javascript_module_source","resolve","project_path","require_hook","global_hook","required_path","alias","aliased_global_path","result","safe_require","split","sep","slice","indexOf","candidates","reasons","reason","userRequest","push","length","identifier","candidate","fail","Error","is_webpack_loader_path","requiring_file_path","filename","replace","substring","lastIndexOf","absolute_path","compile","runtime","unmount","undefined","from","question_mark_index"],"mappings":"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","file":"write assets.js","sourcesContent":["import fs             from 'fs-extra'\r\nimport path           from 'path'\r\nimport semver         from 'semver'\r\nimport require_hacker from 'require-hacker'\r\n\r\nimport serialize from '../tools/serialize-javascript'\r\n\r\nimport { exists, clone, replace_all, starts_with, last } from '../helpers'\r\nimport { alias_hook, uniform_path, is_relative_path, is_global_path, is_package_path, webpack_uses_tilde_for_node_modules } from '../common'\r\n\r\n// one can supply a custom filter\r\nconst default_filter = (module, regular_expression) => regular_expression.test(module.name)\r\n// one can supply a custom namer\r\nconst default_asset_path = module => module.name\r\n// one can supply a custom parser\r\nconst default_parser = module => module.source\r\n\r\n// writes webpack-assets.json file, which contains assets' file paths\r\nexport default function write_assets(json, options, log)\r\n{\r\n\t// take the passed in options\r\n\toptions = clone(options)\r\n\r\n\tlog.debug(`running write assets webpack plugin v${require('../../package.json').version} with options`, options)\r\n\r\n\t// make webpack stats accessible for asset functions (parser, path, filter)\r\n\toptions.webpack_stats = json\r\n\r\n\tconst development = options.development\r\n\r\n\tif (development)\r\n\t{\r\n\t\tlog.debug(' (development mode is on)')\r\n\t}\r\n\r\n\t// write webpack stats json for debugging purpose\r\n\tif (options.debug)\r\n\t{\r\n\t\t// write webpack stats file\r\n\t\tlog.debug(`writing webpack stats to ${options.webpack_stats_path}`)\r\n\r\n\t\t// write the file\r\n\t\t// (format the JSON for better readability)\r\n\t\tfs.outputFileSync(options.webpack_stats_path, JSON.stringify(json, null, 2))\r\n\t}\r\n\r\n\t// Note Webpack version due to breaking changes between v2 and v3.\r\n\t// https://github.com/catamphetamine/webpack-isomorphic-tools/issues/142\r\n\t//\r\n\t// Convert things like `3.0.0-alpha.1` to just `3.0.0`.\r\n\t//\r\n\tlet version = new semver(json.version)\r\n\tversion = `${version.major}.${version.minor}.${version.patch}`\r\n\toptions.webpackVersion = version\r\n\toptions.webpackUsesTildeForNodeModules = webpack_uses_tilde_for_node_modules(version)\r\n\r\n\t// the output object with assets\r\n\tconst output = options.output\r\n\toutput.webpack = { version }\r\n\r\n\t// populate the output object with assets\r\n\tpopulate_assets(output, json, options, log)\r\n\r\n\t// write webpack assets info file\r\n\tif (options.output_to_a_file)\r\n\t{\r\n\t\t// format the JSON for better readability if in debug mode\r\n\t\tconst assets_info = development ? JSON.stringify(output, null, 2) : JSON.stringify(output)\r\n\r\n\t\t// rewrite `webpack-assets.json`\r\n\t\tlet rewrite = true\r\n\r\n\t\t// for `webpack-assets.json` caching to work\r\n\t\t// chunks info should be moved out of it,\r\n\t\t// otherwise chunk hashsums constantly change,\r\n\t\t// and there won't be any caching.\r\n\t\t//\r\n\t\t// const assets_buffer = Buffer.from(assets_info)\r\n\t\t//\r\n\t\t// // if webpack-assets.json already exists,\r\n\t\t// // then maybe no need to rewrite it\r\n\t\t// if (fs.existsSync(options.webpack_assets_path))\r\n\t\t// {\r\n\t\t// \t// previously written webpack-assets.json\r\n\t\t// \tconst previous_assets_buffer = fs.readFileSync(options.webpack_assets_path)\r\n\t\t//\r\n\t\t// \t// if webpack-assets.json rewrite is not needed, then don't do it\r\n\t\t// \tif (assets_buffer.equals(previous_assets_buffer))\r\n\t\t// \t{\r\n\t\t// \t\trewrite = false\r\n\t\t// \t}\r\n\t\t// }\r\n\r\n\t\t// if webpack-assets.json rewrite is needed, then do it\r\n\t\tif (rewrite)\r\n\t\t{\r\n\t\t\tlog.debug(`writing webpack assets info to ${options.webpack_assets_path}`)\r\n\t\t\t// write the file\r\n\t\t\tfs.outputFileSync(options.webpack_assets_path, assets_info)\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tlog.debug(`serving webpack assets from memory`)\r\n\t}\r\n\r\n\t// return Webpack assets JSON object\r\n\t// for serving it through HTTP service\r\n\treturn output\r\n}\r\n\r\n// populates the output object with assets\r\nfunction populate_assets(output, json, options, log)\r\n{\r\n\t// for each chunk name (\"main\", \"common\", ...)\r\n\tObject.keys(json.assetsByChunkName).forEach(function(name)\r\n\t{\r\n\t\tlog.debug(`getting javascript and styles for chunk \"${name}\"`)\r\n\r\n\t\t// get javascript chunk real file path\r\n\r\n\t\tconst javascript = get_assets(name, 'js')[0]\r\n\t\t// the second asset is usually a source map\r\n\r\n\t\tif (javascript)\r\n\t\t{\r\n\t\t\tlog.debug(` (got javascript)`)\r\n\t\t\toutput.javascript[name] = javascript\r\n\t\t}\r\n\r\n\t\t// get style chunk real file path\r\n\r\n\t\tconst style = get_assets(name, 'css')[0]\r\n\t\t// the second asset is usually a source map\r\n\r\n\t\tif (style)\r\n\t\t{\r\n\t\t\tlog.debug(` (got style)`)\r\n\t\t\toutput.styles[name] = style\r\n\t\t}\r\n\t})\r\n\r\n\t// gets asset paths by name and extension of their chunk\r\n\tfunction get_assets(name, extension = 'js')\r\n\t{\r\n\t\tlet chunk = json.assetsByChunkName[name]\r\n\r\n\t\t// a chunk could be a string or an array, so make sure it is an array\r\n\t\tif (!(Array.isArray(chunk)))\r\n\t\t{\r\n\t\t\tchunk = [chunk]\r\n\t\t}\r\n\r\n\t\treturn chunk\r\n\t\t\t// filter by extension\r\n\t\t\t.filter(name => path.extname(extract_path(name)) === `.${extension}`)\r\n\t\t\t// adjust the real path (can be http, filesystem)\r\n\t\t\t.map(name => options.assets_base_url + name)\r\n\t}\r\n\r\n\t// 1st pass\r\n\tconst parsed_assets = {}\r\n\r\n\t// global paths to parsed asset paths\r\n\tconst global_paths_to_parsed_asset_paths = {}\r\n\r\n\t// define __webpack_public_path__ webpack variable\r\n\t// (resolves \"ReferenceError: __webpack_public_path__ is not defined\")\r\n\tconst define_webpack_public_path = 'var __webpack_public_path__ = ' + JSON.stringify(options.assets_base_url) + ';\\n'\r\n\r\n\t// for each user specified asset type\r\n\tfor (let asset_type of Object.keys(options.assets))\r\n\t{\r\n\t\t// asset type settings\r\n\t\tconst asset_type_settings = options.assets[asset_type]\r\n\r\n\t\t// one can supply his own filter\r\n\t\tconst filter = (asset_type_settings.filter || default_filter) //.bind(this)\r\n\t\t// one can supply his own path parser\r\n\t\tconst extract_asset_path = (asset_type_settings.path || default_asset_path) //.bind(this)\r\n\t\t// one can supply his own parser\r\n\t\tconst parser = (asset_type_settings.parser || default_parser) //.bind(this)\r\n\r\n\t\t// guard agains typos, etc\r\n\r\n\t\t// for filter\r\n\t\tif (!asset_type_settings.filter)\r\n\t\t{\r\n\t\t\tlog.debug(`No filter specified for \"${asset_type}\" assets. Using a default one.`)\r\n\t\t}\r\n\r\n\t\t// for path parser\r\n\t\tif (!asset_type_settings.path)\r\n\t\t{\r\n\t\t\tlog.debug(`No path parser specified for \"${asset_type}\" assets. Using a default one.`)\r\n\t\t}\r\n\r\n\t\t// for parser\r\n\t\tif (!asset_type_settings.parser)\r\n\t\t{\r\n\t\t\tlog.debug(`No parser specified for \"${asset_type}\" assets. Using a default one.`)\r\n\t\t}\r\n\r\n\t\tlog.debug(`parsing assets of type \"${asset_type}\"`)\r\n\r\n\t\t// timer start\r\n\t\tconst began_at = new Date().getTime()\r\n\r\n\t\t// get real paths for all the files from this asset type\r\n\t\tjson.modules\r\n\t\t\t// take just modules of this asset type\r\n\t\t\t.filter(module =>\r\n\t\t\t{\r\n\t\t\t\t// check that this asset is of the asset type\r\n\t\t\t\tif (!filter(module, options.regular_expressions[asset_type], options, log))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// guard against an empty source.\r\n\t\t\t\tif (!module.source)\r\n\t\t\t\t{\r\n\t\t\t\t\tlog.error(`Module \"${module.name}\" has no source. Maybe Webpack compilation of this module failed. Skipping this asset.`)\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// include this asset\r\n\t\t\t\treturn true\r\n\t\t\t})\r\n\t\t\t.reduce((set, module) =>\r\n\t\t\t{\r\n\t\t\t\t// determine asset real path\r\n\t\t\t\tconst asset_path = extract_asset_path(module, options, log)\r\n\r\n\t\t\t\t// asset module source, or asset content (or whatever else)\r\n\t\t\t\tconst parsed_asset = parser(module, options, log)\r\n\r\n\t\t\t\tlog.trace(`Adding asset \"${asset_path}\", module id ${module.id} (in webpack-stats.json)`)\r\n\r\n\t\t\t\t// check for naming collisions (just in case)\r\n\t\t\t\tif (exists(set[asset_path]))\r\n\t\t\t\t{\r\n\t\t\t\t\tlog.error('-----------------------------------------------------------------')\r\n\t\t\t\t\tlog.error(`Asset with path \"${asset_path}\" was overwritten because of path collision.`)\r\n\t\t\t\t\tlog.error(`Use the \"filter\" function of this asset type to narrow the results.`)\r\n\t\t\t\t\tlog.error(`Previous asset with this path:`)\r\n\t\t\t\t\tlog.error(set[asset_path])\r\n\t\t\t\t\tlog.error(`New asset with this path:`)\r\n\t\t\t\t\tlog.error(parsed_asset)\r\n\t\t\t\t\tlog.error('-----------------------------------------------------------------')\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add this asset to the list\r\n\t\t\t\t//\r\n\t\t\t\t// also resolve \"ReferenceError: __webpack_public_path__ is not defined\".\r\n\t\t\t\t// because it may be a url-loaded resource (e.g. a font inside a style).\r\n\t\t\t\tset[asset_path] = define_webpack_public_path + require_hacker.to_javascript_module_source(parsed_asset)\r\n\r\n\t\t\t\t// add path mapping\r\n\t\t\t\tglobal_paths_to_parsed_asset_paths[path.resolve(options.project_path, asset_path)] = asset_path\r\n\r\n\t\t\t\t// continue\r\n\t\t\t\treturn set\r\n\t\t\t},\r\n\t\t\tparsed_assets)\r\n\r\n\t\t// timer stop\r\n\t\tlog.debug(` time taken: ${new Date().getTime() - began_at} ms`)\r\n\t}\r\n\r\n\t// register a special require() hook for requiring() raw webpack modules\r\n\tconst require_hook = require_hacker.global_hook('webpack-module', (required_path, module) =>\r\n\t{\r\n\t\tlog.debug(`require()ing \"${required_path}\"`)\r\n\r\n\t\t// if Webpack aliases are supplied\r\n\t\tif (options.alias)\r\n\t\t{\r\n\t\t\t// possibly alias the path\r\n\t\t\tconst aliased_global_path = alias_hook(required_path, module, options.project_path, options.alias, log)\r\n\r\n\t\t\t// if an alias is found\r\n\t\t\tif (aliased_global_path)\r\n\t\t\t{\r\n\t\t\t\tconst result =\r\n\t\t\t\t{\r\n\t\t\t\t\tsource : require_hacker.to_javascript_module_source(safe_require(aliased_global_path, log)),\r\n\t\t\t\t\tpath   : aliased_global_path\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If the `required_path` is an npm package path\r\n\t\t// still can't simply `return` and fall back to default Node.js behaviour\r\n\t\t// because it could still be an asset like\r\n\t\t// `require('bootstrap/style.css')` inside `./style.css`.\r\n\t\t//\r\n\t\t// If the `required_path` is not an asset though\r\n\t\t// (which means \"has no extension\" in this case — should work)\r\n\t\t// then `require()` it as usual.\r\n\t\t//\r\n\t\tif (required_path.split(path.sep).slice(-1)[0].indexOf('.') === -1)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// find an asset with this path\r\n\t\t//\r\n\t\t// the require()d path will be global path in case of the for..of require() loop\r\n\t\t// for the assets (the code a couple of screens below).\r\n\t\t//\r\n\t\t// (it can be anything in other cases (e.g. nested require() calls from the assets))\r\n\t\t//\r\n\t\tif (exists(global_paths_to_parsed_asset_paths[required_path]))\r\n\t\t{\r\n\t\t\tlog.debug(` found in parsed assets`)\r\n\r\n\t\t\tconst result =\r\n\t\t\t{\r\n\t\t\t\tsource : parsed_assets[global_paths_to_parsed_asset_paths[required_path]],\r\n\t\t\t\tpath   : required_path\r\n\t\t\t}\r\n\r\n\t\t\treturn result\r\n\t\t}\r\n\r\n\t\tlog.debug(` not found in parsed assets, searching in webpack stats`)\r\n\r\n\t\t// find a webpack module which has a reason with this path\r\n\r\n\t\tconst candidates = []\r\n\r\n\t\tfor (let module of json.modules)\r\n\t\t{\r\n\t\t\tfor (let reason of module.reasons)\r\n\t\t\t{\r\n\t\t\t\tif (reason.userRequest === required_path)\r\n\t\t\t\t{\r\n\t\t\t\t\tcandidates.push(module)\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// guard against ambiguity\r\n\r\n\t\tif (candidates.length === 1)\r\n\t\t{\r\n\t\t\tlog.debug(` found in webpack stats, module id ${candidates[0].id}`)\r\n\r\n\t\t\t// also resolve \"ReferenceError: __webpack_public_path__ is not defined\".\r\n\t\t\t// because it may be a url-loaded resource (e.g. a font inside a style).\r\n\r\n\t\t\tconst result =\r\n\t\t\t{\r\n\t\t\t\tsource : define_webpack_public_path + candidates[0].source,\r\n\t\t\t\tpath   : candidates[0].identifier\r\n\t\t\t}\r\n\r\n\t\t\treturn result\r\n\t\t}\r\n\r\n\t\t// if there are more than one candidate for this require()d path,\r\n\t\t// then try to guess which one is the one require()d\r\n\r\n\t\tif (candidates.length > 1)\r\n\t\t{\r\n\t\t\tlog.debug(` More than a single candidate module was found in webpack stats for require()d path \"${required_path}\"`)\r\n\r\n\t\t\tfor (let candidate of candidates)\r\n\t\t\t{\r\n\t\t\t\tlog.debug(' ', candidate)\r\n\t\t\t}\r\n\r\n\t\t\t// (loaders matter so the program can't simply throw them away from the required path)\r\n\t\t\t//\r\n\t\t\t// // tries to normalize a cryptic Webpack loader path\r\n\t\t\t// // into a regular relative file path\r\n\t\t\t// // https://webpack.github.io/docs/loaders.html\r\n\t\t\t// let filesystem_required_path = last(required_path\r\n\t\t\t// \t.replace(/^!!/, '')\r\n\t\t\t// \t.replace(/^!/, '')\r\n\t\t\t// \t.replace(/^-!/, '')\r\n\t\t\t// \t.split('!'))\r\n\r\n\t\t\tconst fail = () =>\r\n\t\t\t{\r\n\t\t\t\tthrow new Error(`More than a single candidate module was found in webpack stats for require()d path \"${required_path}\". Enable \"debug: true\" flag in webpack-isomorphic-tools configuration for more info.`)\r\n\t\t\t}\r\n\r\n\t\t\t// https://webpack.github.io/docs/loaders.html\r\n\t\t\tconst is_webpack_loader_path = required_path.indexOf('!') >= 0\r\n\r\n\t\t\t// if it's a Webpack loader-powered path, the code gives up\r\n\t\t\tif (is_webpack_loader_path)\r\n\t\t\t{\r\n\t\t\t\tfail()\r\n\t\t\t}\r\n\r\n\t\t\t// from here on it's either a filesystem path or an npm module path\r\n\r\n\t\t\t// if it's a global path it can be resolved right away\r\n\t\t\tif (is_global_path(required_path))\r\n\t\t\t{\r\n\t\t\t\tconst result =\r\n\t\t\t\t{\r\n\t\t\t\t\tsource : require_hacker.to_javascript_module_source(safe_require(required_path, log)),\r\n\t\t\t\t\tpath   : required_path\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\r\n\t\t\t// from here on it's either a relative filesystem path or an npm module path,\r\n\t\t\t// so it can be resolved against the require()ing file path (if it can be recovered).\r\n\r\n\t\t\t// `module.filename` here can be anything, not just a filesystem absolute path,\r\n\t\t\t// since some advanced require() hook trickery is involved.\r\n\t\t\t// therefore it will be parsed.\r\n\t\t\t//\r\n\t\t\tlet requiring_file_path = module.filename.replace(/\\.webpack-module$/, '')\r\n\r\n\t\t\t// if it's a webpack loader-powered path, then extract the filesystem path from it\r\n\t\t\tif (requiring_file_path.indexOf('!') >= 0)\r\n\t\t\t{\r\n\t\t\t\trequiring_file_path = requiring_file_path.substring(requiring_file_path.lastIndexOf('!') + 1)\r\n\t\t\t}\r\n\r\n\t\t\t// make relative path global\r\n\t\t\tif (is_relative_path(requiring_file_path))\r\n\t\t\t{\r\n\t\t\t\trequiring_file_path = path.resolve(options.project_path, requiring_file_path)\r\n\t\t\t}\r\n\r\n\t\t\t// if `requiring_file_path` is a filesystem path (not an npm module path),\r\n\t\t\t// then the require()d path can possibly be resolved\r\n\t\t\tif (is_global_path(requiring_file_path))\r\n\t\t\t{\r\n\t\t\t\tlog.debug(` The module is being require()d from \"${requiring_file_path}\", so resolving the path against this file`)\r\n\r\n\t\t\t\t// if it's a relative path, can try to resolve it\r\n\t\t\t\tif (is_relative_path(required_path))\r\n\t\t\t\t{\r\n\t\t\t\t\tconst absolute_path = path.resolve(requiring_file_path, '..', required_path)\r\n\r\n\t\t\t\t\tconst result =\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsource : require_hacker.to_javascript_module_source(safe_require(absolute_path, log)),\r\n\t\t\t\t\t\tpath   : absolute_path\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn result\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if it's an npm module path (e.g. 'babel-runtime/core-js/object/assign'),\r\n\t\t\t\t// can try to require() it from the requiring asset path\r\n\t\t\t\tif (is_package_path(required_path) && is_global_path(module.filename))\r\n\t\t\t\t{\r\n\t\t\t\t\tconst absolute_path = require_hacker.resolve(required_path, module)\r\n\r\n\t\t\t\t\tconst result =\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsource : require_hacker.to_javascript_module_source(safe_require(absolute_path, log)),\r\n\t\t\t\t\t\tpath   : absolute_path\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn result\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// if it's still here then it means it's either a\r\n\t\t\tfail()\r\n\t\t}\r\n\t})\r\n\r\n\tlog.debug(`compiling assets`)\r\n\r\n\t// timer start\r\n\tconst began_at = new Date().getTime()\r\n\r\n\t// evaluate parsed assets source code\r\n\tfor (const asset_path of Object.keys(parsed_assets))\r\n\t{\r\n\t\tlet compile = true\r\n\r\n\t\t// If this asset should be compiled at runtime then skip its compilation.\r\n\t\t// (runtime compilation can be used for Webpack loaders returning\r\n\t\t//  javascript functions or React component classes — stuff like that,\r\n\t\t//  because it's not serializable to `webpack-assets.json`)\r\n\t\tfor (const asset_type of Object.keys(options.assets))\r\n\t\t{\r\n\t\t\tif (options.regular_expressions[asset_type].test(asset_path))\r\n\t\t\t{\r\n\t\t\t\tif (options.assets[asset_type].runtime)\r\n\t\t\t\t{\r\n\t\t\t\t\tcompile = false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!compile)\r\n\t\t{\r\n\t\t\toutput.assets[asset_path] = parsed_assets[asset_path]\r\n\t\t\tcontinue\r\n\t\t}\r\n\r\n\t\t// set asset value\r\n\t\tlog.debug(`compiling asset \"${asset_path}\"`)\r\n\t\toutput.assets[asset_path] = safe_require(path.resolve(options.project_path, asset_path), log)\r\n\r\n\t\t// inside that require() call above\r\n\t\t// all the assets are resolved relative to this `module`,\r\n\t\t// which is irrelevant because they are all absolute filesystem paths.\r\n\t\t//\r\n\t\t// if in some of those assets a nested require() call is present\r\n\t\t// then it will be resolved relative to that asset folder.\r\n\t}\r\n\r\n\t// unmount the previously installed require() hook\r\n\trequire_hook.unmount()\r\n\r\n\t// timer stop\r\n\tlog.debug(` time taken: ${new Date().getTime() - began_at} ms`)\r\n}\r\n\r\nfunction safe_require(path, log)\r\n{\r\n\ttry\r\n\t{\r\n\t\treturn require(path)\r\n\t}\r\n\tcatch (error)\r\n\t{\r\n\t\tlog.error(error)\r\n\t\treturn undefined\r\n\t}\r\n}\r\n\r\nexport function extract_path(from)\r\n{\r\n\tconst question_mark_index = from.indexOf('?')\r\n\tif (question_mark_index === -1)\r\n\t{\r\n\t\treturn from\r\n\t}\r\n\treturn from.slice(0, question_mark_index)\r\n}"]}